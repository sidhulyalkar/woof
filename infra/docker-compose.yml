version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: petpath
      POSTGRES_USER: petpath_user
      POSTGRES_PASSWORD: petpath_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - petpath_network

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.10-community
    environment:
      NEO4J_AUTH: neo4j/neo4j_password
      NEO4J_PLUGINS: '["graph-data-science"]'
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - petpath_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - petpath_network

  # Backend API (FastAPI)
  backend:
    build:
      context: ../backend
      dockerfile: ../infra/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://petpath_user:petpath_password@postgres:5432/petpath
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=neo4j_password
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
    depends_on:
      - postgres
      - neo4j
      - redis
    networks:
      - petpath_network
    volumes:
      - ../backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # ML Service
  ml:
    build:
      context: ../ml
      dockerfile: ../infra/Dockerfile.ml
    ports:
      - "8001:8001"
    environment:
      - MODEL_PATH=/app/models/
    depends_on:
      - redis
    networks:
      - petpath_network
    volumes:
      - ../ml:/app
      - ml_models:/app/models
    command: uvicorn infer:app --host 0.0.0.0 --port 8001 --reload

  # Frontend (Next.js)
  frontend:
    build:
      context: ../frontend
      dockerfile: ../infra/Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_ML_URL=http://localhost:8001
      - DATABASE_URL=postgresql://petpath_user:petpath_password@postgres:5432/petpath
    depends_on:
      - backend
      - ml
    networks:
      - petpath_network
    # For development - comment out for production builds
    # volumes:
    #   - ../frontend:/app
    #   - /app/node_modules
    #   - /app/.next

  # N8N Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=petpath
      - DB_POSTGRESDB_USER=petpath_user
      - DB_POSTGRESDB_PASSWORD=petpath_password
      - N8N_ENCRYPTION_KEY=your-encryption-key-change-in-production
    ports:
      - "5678:5678"
    depends_on:
      - postgres
    networks:
      - petpath_network
    volumes:
      - n8n_data:/home/node/.n8n
      - ../n8n:/home/node/.n8n/custom

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@petpath.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - petpath_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Redis Commander for Redis management (optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - petpath_network

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  redis_data:
  ml_models:
  n8n_data:
  pgadmin_data:

networks:
  petpath_network:
    driver: bridge